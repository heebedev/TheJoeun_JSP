/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.49
 * Generated at: 2020-06-11 01:36:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class MainPage_005f1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"UTF-8\">\n");
      out.write("\t<title>빌릴꼬냥?</title>\n");
      out.write("\t<style type=\"text/css\">\n");
      out.write("\t\tbody{\t\t\t\n");
      out.write("\t\t\tmargin-left:100px;\n");
      out.write("\t\t\tmargin-right:100px;\n");
      out.write("\t\t\tmax-width:1000px;\n");
      out.write("\t\t\tpadding: auto;\n");
      out.write("\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\tul {\n");
      out.write("\t\t\tbackground-color: white;\n");
      out.write("\t\t\tlist-style-type: none;\n");
      out.write("\t\t\tmargin: 0;\n");
      out.write("\t\t\tpadding: 0;\n");
      out.write("\t\t\toverflow: hidden;\n");
      out.write("\t\t}\n");
      out.write("\t\tli { float: left; }\n");
      out.write("\t\tli a {\n");
      out.write("\t\t\tdisplay: block;\n");
      out.write("\t\t\tbackground-color: white;\n");
      out.write("\t\t\tcolor: #000000;\n");
      out.write("\t\t\tpadding: 8px;\n");
      out.write("\t\t\ttext-decoration: none;\n");
      out.write("\t\t\ttext-align: center;\n");
      out.write("\t\t\tfont-weight: bold;\n");
      out.write("\t\t}\n");
      out.write("\t\tli a:hover:not(.current) {\n");
      out.write("\t\t\tbackground-color: silver;\n");
      out.write("\t\t\tcolor: purple;\n");
      out.write("\t\t\ttext-decoration:underline;\n");
      out.write("\t\t}\n");
      out.write("\t\tli a.home{\n");
      out.write("\t\t\tbackground-color: black;\n");
      out.write("\t\t\tcolor: white;\n");
      out.write("\t\t}\n");
      out.write("\t\tdiv.search{\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\tdiv.logo{\n");
      out.write("\t\t}\n");
      out.write("\t\tdiv.posts{\n");
      out.write("\t\t}\n");
      out.write("\t\tdiv.posts-items{\n");
      out.write("\t\t}\n");
      out.write("\t\tdiv.posts-items-title{\n");
      out.write("\t\t}\n");
      out.write("\t\tinput[type=\"text\"] {\n");
      out.write("\t\t\twidth: 40%;\n");
      out.write("\t\t\tpadding: 10px 20px; \n");
      out.write("\t\t\tmargin:5px 0;\t\t\t\n");
      out.write("\t\t\tborder: solid 2px black;\n");
      out.write("\t\t\tborder-radius: 8px; \n");
      out.write("\t\t}\n");
      out.write("\tdiv.banner {position: relative; width: 100%; height: 210px; top: 50px;  margin:0 auto; padding:0; overflow: hidden;}\n");
      out.write("\tdiv.banner ul {position: absolute; margin: 0px; padding:0; list-style: none; }\n");
      out.write("\tdiv.banner ul li {float: left; width: 1000px; height: 210px; margin:0; padding:0;}\n");
      out.write("\t</style>\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n");
      out.write("\n");
      out.write("<script language=\"JavaScript\">\n");
      out.write("\t$(document).ready(function() {\n");
      out.write("\t\tvar $banner = $(\".banner\").find(\"ul\");\n");
      out.write("\n");
      out.write("\t\tvar $bannerWidth = $banner.children().outerWidth();\n");
      out.write("\t\tvar $bannerHeight = $banner.children().outerHeight();\n");
      out.write("\t\tvar $length = $banner.children().length;\n");
      out.write("\t\tvar rollingId;\n");
      out.write("\n");
      out.write("\t\trollingId = setInterval(function() { rollingStart(); }, 5000);\n");
      out.write("    \n");
      out.write("\t\tfunction rollingStart() {\n");
      out.write("\t\t\t$banner.css(\"width\", $bannerWidth * $length + \"px\");\n");
      out.write("\t\t\t$banner.css(\"height\", $bannerHeight + \"px\");\n");
      out.write("\t\t\t$banner.animate({left: - $bannerWidth + \"px\"}, 1500, function() {\n");
      out.write("\t\t\t\t$(this).append(\"<li>\" + $(this).find(\"li:first\").html() + \"</li>\");\n");
      out.write("\t\t\t\t$(this).find(\"li:first\").remove();\n");
      out.write("\t\t\t\t$(this).css(\"left\", 0);\n");
      out.write("\t\t\t\tsetInterval(() => {\n");
      out.write("\t\t\t\t}, 5000);\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\t}); \n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<form action=\"search.bill\"> \n");
      out.write("\t<ul>\n");
      out.write("\t\t\t<li><a class=\"home\" href=\"refresh.bill\">홈</a></li>\n");
      out.write("\t\t<ul style=\"float:right; list-style-type:none;\">\n");
      out.write("\t\t\t<li><a href=\"login.bill\">로그인</a></li>\n");
      out.write("\t\t\t<li><a href=\"signin.bill\">회원가입</a></li>\n");
      out.write("\t\t</ul>\n");
      out.write("\t</ul>\n");
      out.write("\t<h1 style= \"text-align: center;\">빌릴꼬냥</h1>\n");
      out.write("\t<center>\n");
      out.write("\t<input type=\"text\" placeholder =\"상품명, 제품명, 지역명 입력\" name=\"search\">\n");
      out.write("\t<input type=\"submit\" value=\"검색\" style=\"width: 50px; height:40px; border-radius: 8px; color: white; background-color: black;\"> \n");
      out.write("\t</center> \n");
      out.write("\t</form>\n");
      out.write("\t\t<div class=\"banner\">\n");
      out.write("\t\t\t<ul>\n");
      out.write("\t\t\t\t<li><img src=\"https://media.bunjang.co.kr/images/nocrop/471722706.jpg\" width=\"100%\" height=\"210px\"></li>\n");
      out.write("\t\t\t\t<li><img src=\"https://media.bunjang.co.kr/images/nocrop/465890574.jpg\" width=\"100%\" height=\"210px\"></li>\n");
      out.write("\t\t\t\t<li><img src=\"https://media.bunjang.co.kr/images/nocrop/415809298.jpg\" width=\"100%\" height=\"210px\"></li>\n");
      out.write("\t\t\t\t<li><img src=\"https://media.bunjang.co.kr/images/nocrop/472834031.jpg\" width=\"100%\" height=\"210px\"></li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
