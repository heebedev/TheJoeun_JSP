/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.49
 * Generated at: 2020-06-04 07:33:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class AddressInsert_005f02_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      com.jsplec.base.member member = null;
      synchronized (session) {
        member = (com.jsplec.base.member) _jspx_page_context.getAttribute("member", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (member == null){
          member = new com.jsplec.base.member();
          _jspx_page_context.setAttribute("member", member, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\t");

		request.setCharacterEncoding("utf-8");
		String str_name = request.getParameter("name");
		String str_tel = request.getParameter("tel");
		String str_address = request.getParameter("address");
		String str_email = request.getParameter("email");
		String str_relation = request.getParameter("relation");
		boolean result = false;
	
		
		
		
		if (str_name.equals("") || str_tel.equals("") || str_address.equals("") || str_email.equals("") || str_relation.equals("")) {
	
      out.write("\n");
      out.write("\t\t\t<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\t    \talert(\"등록에 실패했습니다. 입력값을 다시 확인해주세요.\")\n");
      out.write("\t    \thistory.go(-1);\n");
      out.write("\n");
      out.write("\t\t\t</script> \n");
      out.write("\t");
		
		} else {
	
		
		
	
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("     ");

    
    	
    	
    //DB연결
   	String url_mysql = "jdbc:mysql://localhost:3306/addressBook?serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false";
    String id_mysql = "root";
    String pw_mysql = "qwer1234";
    
    
    PreparedStatement ps = null;
    
    try {
    	Class.forName("com.mysql.cj.jdbc.Driver");
    	Connection conn_mysql = DriverManager.getConnection(url_mysql, id_mysql, pw_mysql);
    	Statement stmt_mysql = conn_mysql.createStatement();
    	
    	String A = "insert into customerBook(name, tel, address, email, relation) values (?, ?, ?, ?, ?)";
    	
    	ps = conn_mysql.prepareStatement(A);
    	ps.setString(1, str_name);
    	ps.setString(2, str_tel);
    	ps.setString(3, str_address);
    	ps.setString(4, str_email);
    	ps.setString(5, str_relation);
    	ps.executeUpdate();
    	result = true;
    	
    }catch (Exception e) {
    	e.printStackTrace();
    }
  
    
    
      out.write("\n");
      out.write("    \n");
      out.write("  ");

 	if (result) { 
      out.write("\n");
      out.write(" \t\t<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\n");
      out.write(" \t\tvar name = '");
      out.print(str_name );
      out.write("';\n");
      out.write(" \t\tvar tel = '");
      out.print(str_tel );
      out.write("';\n");
      out.write(" \t\tvar address = '");
      out.print(str_address );
      out.write("';\n");
      out.write(" \t\tvar email = '");
      out.print(str_email );
      out.write("';\n");
      out.write(" \t\tvar relation = '");
      out.print(str_relation );
      out.write("';\n");
      out.write("\n");
      out.write(" \t\talert(name + \"님의 정보가 아래와 같이 등록되었습니다.\" + \"\\n\\n전화번호 : \" + tel + \"\\n주소 : \" + address + \"\\n전자우편 : \" + email + \"\\n관계 : \" + relation)\n");
      out.write(" \t\tlocation.href=\"AddressBook_01.jsp\";\n");
      out.write("\n");
      out.write(" \t\t</script> ");

 	} else {
 		
 		
      out.write("\n");
      out.write(" \t\t<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("\t    \talert(\"입력에 실패하였습니다. 내용을 다시 확인해주세요.\")\n");
      out.write("\n");
      out.write("\t</script> \n");
      out.write(" \t");
 }} 
      out.write("\n");
      out.write("    \n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
