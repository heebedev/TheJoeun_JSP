/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.49
 * Generated at: 2020-06-04 08:30:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class AddressSearch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>주소록</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<h1 align=\"center\">주소록 명단 리스트</h1>\n");
      out.write("\t<dr>\n");
      out.write("\t<form action=\"AddressSearch.jsp\" method=\"post\" align=\"center\">\n");
      out.write("\t\t검색 선택<select name=\"selection\">\n");
      out.write("\t\t\t<option value=\"name\">이름</option>\n");
      out.write("\t\t\t<option value=\"tel\">전화번호</option>\n");
      out.write("\t\t\t<option value=\"address\">주소</option>\n");
      out.write("\t\t\t<option value=\"email\">전자우편</option>\n");
      out.write("\t\t\t<option value=\"relation\">관계</option>\n");
      out.write("\t\t</select>&nbsp;\n");
      out.write("\t\t<input type=\"text\" name=\"selecText\" >\n");
      out.write("\t\t<input type=\"submit\" value=\"검색\">\n");
      out.write("\t</form>\n");
      out.write("\t\n");
      out.write("\t<dr>\n");
      out.write("\t<hr>\n");
      out.write("\t<dr>\n");
      out.write("\t\n");
      out.write("\t");

		request.setCharacterEncoding("utf-8");
		String selection = (String)request.getParameter("selection");
		String selectext = (String)request.getParameter("selecText");
		
	
		//Database 연결
		String url_mysql = "jdbc:mysql://localhost:3306/addressBook?serverTimezone=Asia/Seoul&characterEncoding=utf8&useSSL=false";
  	  	String id_mysql = "root";
    	String pw_mysql = "qwer1234";
		int cnt = 0;
		
		
		String WhereDefault = "select * from customerBook where " + selection + " like '%" + selectext +"%' order by name";
		
		 try {
		    	Class.forName("com.mysql.cj.jdbc.Driver");
		    	Connection conn_mysql = DriverManager.getConnection(url_mysql, id_mysql, pw_mysql);
		    	Statement stmt_mysql = conn_mysql.createStatement();
		    	
		    	ResultSet rs = stmt_mysql.executeQuery(WhereDefault);
		    	
	
      out.write("\n");
      out.write("\t\t<table border=\"1\" align=\"center\">\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<th width=\"20\">Seq</th>\n");
      out.write("\t\t\t\t<th width=\"70\">이름</th>\n");
      out.write("\t\t\t\t<th width=\"120\">전화번호</th>\n");
      out.write("\t\t\t\t<th width=\"200\">주소</th>\n");
      out.write("\t\t\t\t<th width=\"150\">전자우편</th>\n");
      out.write("\t\t\t\t<th width=\"200\">관계</th>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\n");
      out.write("\t");
 
			while (rs.next()) {
	
      out.write("\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td align=\"center\"><a href=\"AddressBook_02.jsp?seq=");
      out.print(rs.getInt(1));
      out.write('"');
      out.write('>');
      out.print(rs.getInt(1) );
      out.write("</a></td>\n");
      out.write("\t\t\t\t<td align=\"center\">");
      out.print(rs.getString(2) );
      out.write("</td>\n");
      out.write("\t\t\t\t<td align=\"center\">");
      out.print(rs.getString(3) );
      out.write("</td>\n");
      out.write("\t\t\t\t<td align=\"center\">");
      out.print(rs.getString(4) );
      out.write("</td>\n");
      out.write("\t\t\t\t<td align=\"center\">");
      out.print(rs.getString(5) );
      out.write("</td>\n");
      out.write("\t\t\t\t<td align=\"center\">");
      out.print(rs.getString(6) );
      out.write("</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t");
	    		
		    		cnt ++; }
		    	
		    	conn_mysql.close();  //웹에서는 어차피 연결 끊기기 때문에 큰 의미 없다. 허
		    	
		    }catch (Exception e) {
		    	e.printStackTrace();
		    }
	
	
      out.write("\n");
      out.write("\t\t</table>\n");
      out.write("\t\t<h4 align=\"center\">\n");
      out.write("\t\t<dr><dr>\n");
      out.write("\t\n");
      out.write("\t\t<a href=\"AddressBook_01.jsp\">처음으로</a>\n");
      out.write("\t\t</h4>\n");
      out.write("\t\t<hr>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t\n");
      out.write("\t\t<h3 align=\"center\">총 인원은 ");
      out.print(cnt );
      out.write("명 입니다.</h3>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
